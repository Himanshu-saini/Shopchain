{
  "contractName": "Shopping",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/E/Blockchain/Shopchain/contracts/Shopping-contract.sol\":\"Shopping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Blockchain/Shopchain/contracts/Shopping-contract.sol\":{\"keccak256\":\"0xc9b1a40a073f56023dfa0b132da271127770efb024fffab3c3935fc513cfa5a1\",\"urls\":[\"bzz-raw://02849af0c5a01d944644b4a26f5c8386d7cb841686117169fba5ecad22cd12d2\",\"dweb:/ipfs/QmRd8KJZibWe91amt6dfDStfSvcL9pQDsxR3kVh6CVxW2C\"]},\"/E/Blockchain/Shopchain/contracts/User.sol\":{\"keccak256\":\"0x6bf26829dab4e13c3a9df171549e7d54cad71d75a89c3e87e90aef42acbe2b68\",\"urls\":[\"bzz-raw://a950156f2dbd90d34dd4aaea2d92b5f67fb607b249580cca414957c3f8f4655b\",\"dweb:/ipfs/QmWtmLzzET9ms6cKCcGpRGVVxKn256u7Z7vEjwkAtNn65a\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820cdc3199930e9cd61dfa3a45459a412eae0b1ec8bb76f4e340df3cbb555e19a3a64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72315820cdc3199930e9cd61dfa3a45459a412eae0b1ec8bb76f4e340df3cbb555e19a3a64736f6c63430005100032",
  "sourceMap": "51:1182:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51:1182:2;;;;;;;",
  "deployedSourceMap": "51:1182:2:-;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport './User.sol';\r\n\r\ncontract Shopping {\r\n\r\n    // function purchaseProduct(uint _id) public payable {\r\n    //     // Fetch the product\r\n    //     Product memory _product = products[_id];\r\n    //     // Fetch the owner\r\n    //     address payable _seller = _product.owner;\r\n    //     // Make sure the product has a valid id\r\n    //     require(_product.id > 0 && _product.id <= productCount);\r\n    //     // Require that there is enough Ether in the transaction\r\n    //     require(msg.value >= _product.price);\r\n    //     // Require that the product has not been purchased already\r\n    //     require(!_product.purchased);\r\n    //     // Require that the buyer is not the seller\r\n    //     require(_seller != msg.sender);\r\n    //     // Transfer ownership to the buyer\r\n    //     _product.owner = msg.sender;\r\n    //     // Mark as purchased\r\n    //     _product.purchased = true;\r\n    //     // Update the product\r\n    //     products[_id] = _product;\r\n    //     // Pay the seller by sending them Ether\r\n    //     address(_seller).transfer(msg.value);\r\n    //     // Trigger an event\r\n    //     emit ProductPurchased(productCount, _product.name, _product.price, msg.sender, true);\r\n    // }\r\n}\r\n",
  "sourcePath": "E:\\Blockchain\\Shopchain\\contracts\\Shopping-contract.sol",
  "ast": {
    "absolutePath": "/E/Blockchain/Shopchain/contracts/Shopping-contract.sol",
    "exportedSymbols": {
      "Shopping": [
        364
      ]
    },
    "id": 365,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 362,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/E/Blockchain/Shopchain/contracts/User.sol",
        "file": "./User.sol",
        "id": 363,
        "nodeType": "ImportDirective",
        "scope": 365,
        "sourceUnit": 478,
        "src": "27:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 364,
        "linearizedBaseContracts": [
          364
        ],
        "name": "Shopping",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 365,
        "src": "51:1182:2"
      }
    ],
    "src": "0:1235:2"
  },
  "legacyAST": {
    "absolutePath": "/E/Blockchain/Shopchain/contracts/Shopping-contract.sol",
    "exportedSymbols": {
      "Shopping": [
        364
      ]
    },
    "id": 365,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 362,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/E/Blockchain/Shopchain/contracts/User.sol",
        "file": "./User.sol",
        "id": 363,
        "nodeType": "ImportDirective",
        "scope": 365,
        "sourceUnit": 478,
        "src": "27:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 364,
        "linearizedBaseContracts": [
          364
        ],
        "name": "Shopping",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 365,
        "src": "51:1182:2"
      }
    ],
    "src": "0:1235:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-29T10:55:08.784Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}